{"version":3,"sources":["components/RenderHandler.tsx","components/Text.tsx","constants/colors.ts","layouts/Navbar.tsx","components/List.tsx","components/View.tsx","components/Spacer.tsx","components/UserInfo.tsx","layouts/Sidebar.tsx","components/Button.tsx","layouts/ControlPanel.tsx","utils/chartUtils.ts","components/LineGraph.tsx","components/Card.tsx","layouts/Graphs.tsx","App.tsx","serviceWorker.js","index.js"],"names":["RenderHandler","props","isDesktopOrLaptop","useMediaQuery","query","children","Text","styled","span","as","marginMatcher","color","withoutSpacing","align","colors","blue","navy","green","darkGreen","red","orange","yellow","white","gray","darkGray","black","TopNavbar","div","Navbar","undefined","ListGroup","ul","ListGroupItem","li","active","View","flex","display","flexDirection","flexWrap","flexJustifyContent","flexAlignItems","Spacer","backgroundColor","UserInfoWrapper","UserInfoContent","Avatar","img","UserInfo","profile","src","avatar","style","marginTop","username","margin","padding","SidebarWrapper","show","SidebarContainer","SidebarTool","SidebarToggler","button","Sidebar","React","setShow","onClick","size","variantMatcher","variant","Button","ghost","rounded","borderMatcher","colorMatcher","sizeMatcher","block","disabled","defaultProps","ControlPanel","useObject","firebase","database","ref","pir1","pir2","pir3","pir4","relay1","relay2","relay3","relay4","relay5","relay6","relay7","mapPir","pirState","dataRef","text","mapRelay","relayState","map","pirItem","val","status","key","relayItem","relayRef","update","clickRelay","graphInitialData","labels","datasets","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","graphOptions","responsive","maintainAspectRatio","legend","tooltips","enabled","scales","xAxes","ticks","fontSize","maxRotation","minRotation","yAxes","GraphContainer","LineGraph","graphData","setGraphData","oldData","oldObj","chartDatasets","chartLoggerData","currentTime","dayjs","Date","getTime","format","newLabels","newData","length","slice","getGraphData","streamData","title","height","width","options","Card","Graphs","voltage","amphere","power","setPower","currentVoltageData","currentAmphereData","beginAtZero","min","max","stepSize","initializeApp","apiKey","process","databaseURL","projectId","Container","MainWrapper","MainContent","MainContentWrapper","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10c0796c.chunk.js","sourcesContent":["import { useMediaQuery } from \"react-responsive\";\n\ntype RenderHandlerProps = {\n  children: (isDesktopOrLaptop: boolean) => any;\n};\n\nconst RenderHandler = (props: RenderHandlerProps) => {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-device-width: 1224px)\"\n  });\n\n  return props.children(isDesktopOrLaptop);\n};\n\nexport default RenderHandler;\n","import styled from \"styled-components\";\n\nconst marginMatcher = (as?: string) => {\n  switch (as) {\n    case \"h1\":\n      return \"12px 0\";\n    case \"h2\":\n      return \"10px 0\";\n    case \"h3\":\n      return \"8px 0\";\n    case \"h4\":\n      return \"7px 0\";\n    case \"h5\":\n      return \"5px 0\";\n    case \"h6\":\n      return \"4px 0\";\n    case \"span\":\n    case \"small\":\n    default:\n      return \"0\";\n  }\n};\n\ntype TextProps = {\n  as?: string;\n  withoutSpacing?: boolean;\n  align?: \"left\" | \"center\" | \"right\" | \"justify\";\n  children: any;\n};\n\nconst Text = styled.span`\n  margin: ${(props: TextProps) => (props.as ? marginMatcher(props.as) : \"0\")};\n\n  font-family: \"Ubuntu\";\n  color: ${props => (props.color ? props.color : \"black\")};\n  ${props =>\n    props.withoutSpacing\n      ? `\n    margin: 0;\n    padding: 0;\n  `\n      : null};\n  text-align: ${props => (props.align ? props.align : \"left\")};\n`;\n\nexport default Text;\n","const colors = {\n  blue: \"#0f9df6\",\n  navy: \"#274374\",\n  green: \"#45be93\",\n  darkGreen: \"#288692\",\n  red: \"#e45d50\",\n  orange: \"#ff7f41\",\n  yellow: \"#fbd04f\",\n  white: \"#ffffff\",\n  gray: \"#f4f4f4\",\n  darkGray: \"#e9e9e9\",\n  black: \"#323441\"\n};\n\nexport default colors;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport RenderHandler from \"../components/RenderHandler\";\nimport Text from \"../components/Text\";\nimport colors from \"../constants/colors\";\n\ntype NavbarProps = { firebase: any };\n\nconst Navbar = (props: NavbarProps) => {\n  return (\n    <RenderHandler>\n      {isDesktopOrLaptop => (\n        <TopNavbar isDesktopOrLaptop={isDesktopOrLaptop}>\n          <Text\n            color={colors.navy}\n            as={!isDesktopOrLaptop ? \"h4\" : \"h3\"}\n            align={!isDesktopOrLaptop ? \"center\" : undefined}\n            withoutSpacing\n          >\n            Wisp Admin\n          </Text>\n        </TopNavbar>\n      )}\n    </RenderHandler>\n  );\n};\n\ntype TopNavbarProps = {\n  isDesktopOrLaptop: boolean;\n};\n\nconst TopNavbar = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: ${(props: TopNavbarProps) =>\n    props.isDesktopOrLaptop ? `8px 20px;` : `16px 20px;`};\n\n  min-height: ${props => (props.isDesktopOrLaptop ? `50px;` : `60px;`)};\n  width: calc(100vw - 40px);\n\n  background-color: ${colors.white};\n  box-shadow: 0px 0px 10px 2px rgba(41, 63, 76, 0.1);\n  -webkit-box-shadow: 0px 0px 10px 2px rgba(41, 63, 76, 0.1);\n  -moz-box-shadow: 0px 0px 10px 2px rgba(41, 63, 76, 0.1);\n\n  z-index: 10;\n`;\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nimport colors from \"../constants/colors\";\n\nconst ListGroup = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\ntype ListGroupItem = {\n  active?: boolean;\n};\n\nconst ListGroupItem = styled.li`\n  list-style: none;\n  position: relative;\n\n  margin: 0;\n  padding: 12px 16px;\n\n  font-size: 0.9rem;\n  color: ${colors.black};\n\n  ${(props: ListGroupItem) =>\n    props.active\n      ? `\n      background-color: ${colors.darkGray}\n      border-top-right-radius: 3px;\n      border-bottom-right-radius: 3px;\n\n      font-weight: bold;\n\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        height: 100%;\n        width: 4px;\n\n        background-color: ${colors.navy};\n      }\n    `\n      : `\n      background-color: ${colors.gray}\n    `}\n\n  &:hover {\n    background-color: ${colors.darkGray};\n  }\n`;\n\nconst ListGroupItemText = styled.li`\n  list-style: none;\n\n  margin: 0;\n  padding: 12px 16px;\n\n  background-color: ${colors.black};\n\n  font-size: 0.7rem;\n  color: ${colors.gray};\n`;\n\nexport { ListGroup, ListGroupItem, ListGroupItemText };\n","import styled from \"styled-components\";\n\nexport type FlexDirectionType =\n  | \"row\"\n  | \"row-reverse\"\n  | \"column\"\n  | \"column-reverse\";\n\ntype ViewProps = {\n  flex?: any;\n  display?: any;\n  flexDirection?: FlexDirectionType;\n  flexWrap?: any;\n  flexJustifyContent?: any;\n  flexAlignItems?: any;\n};\n\nconst View = styled.div`\n  flex: ${(props: ViewProps) => (props.flex ? props.flex : undefined)};\n  display: ${props => (props.display ? props.display : \"flex\")};\n  flex-direction: ${props =>\n    props.flexDirection ? props.flexDirection : \"row\"};\n  flex-wrap: ${props => (props.flexWrap ? props.flexWrap : \"nowrap\")};\n  justify-content: ${props =>\n    props.flexJustifyContent ? props.flexJustifyContent : \"flex-start\"};\n  align-items: ${props =>\n    props.flexAlignItems ? props.flexAlignItems : \"flex-start\"};\n`;\n\nexport default View;\n","import styled from \"styled-components\";\n\nimport colors from \"../constants/colors\";\n\ntype SpacerProps = {\n  backgroundColor?: string;\n};\n\nconst Spacer = styled.div`\n  margin: 1rem 0;\n\n  height: 1px;\n  width: 100%;\n\n  background-color: ${(props: SpacerProps) =>\n    props.backgroundColor ? props.backgroundColor : colors.navy};\n`;\n\nexport default Spacer;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport View from \"./View\";\nimport Spacer from \"./Spacer\";\nimport Text from \"./Text\";\nimport colors from \"../constants/colors\";\n\ntype UserInfoProps = {\n  profile: {\n    avatar: string;\n    username: string;\n  };\n};\n\nconst UserInfo = (props: UserInfoProps) => {\n  const { profile } = props;\n\n  return (\n    <React.Fragment>\n      <UserInfoWrapper>\n        <Avatar src={profile && profile.avatar} />\n        <UserInfoContent>\n          <Text as=\"small\">Hello, </Text>\n          <Text as=\"h4\" style={{ marginTop: 2 }}>\n            {props.profile.username}\n          </Text>\n        </UserInfoContent>\n      </UserInfoWrapper>\n\n      <View style={{ margin: \"8px 0\", padding: \"0 16px\" }}>\n        <Spacer backgroundColor={colors.navy} style={{ margin: 0 }} />\n      </View>\n    </React.Fragment>\n  );\n};\n\nconst UserInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  padding: 16px;\n`;\n\nconst UserInfoContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  margin-bottom: -8px;\n  padding-left: 12px;\n`;\n\nconst Avatar = styled.img`\n  height: 50px;\n  width: 50px;\n\n  border-radius: 25px;\n`;\n\nexport default UserInfo;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronRight, ChevronLeft } from \"react-feather\";\n\nimport { ListGroup, ListGroupItem } from \"../components/List\";\nimport UserInfo from \"../components/UserInfo\";\nimport colors from \"../constants/colors\";\n\nconst Sidebar = () => {\n  const [show, setShow] = React.useState(true);\n\n  return (\n    <SidebarWrapper show={show}>\n      <SidebarContainer show={show}>\n        <ListGroup>\n          <UserInfo\n            profile={{\n              username: \"Piyuw Piyuw\",\n              avatar: \"https://api.adorable.io/avatars/285/abott@adorable.png\"\n            }}\n          />\n\n          <ListGroupItem>Dashboard</ListGroupItem>\n          <ListGroupItem active>Sensor</ListGroupItem>\n          <ListGroupItem>User Log</ListGroupItem>\n          <ListGroupItem>User</ListGroupItem>\n\n          <ListGroupItem>Lorem</ListGroupItem>\n          <ListGroupItem>Ipsum</ListGroupItem>\n          <ListGroupItem>Dolor</ListGroupItem>\n          <ListGroupItem>Sit</ListGroupItem>\n          <ListGroupItem>Amet</ListGroupItem>\n          <ListGroupItem>Consectetur</ListGroupItem>\n          <ListGroupItem>Adipiscing</ListGroupItem>\n          <ListGroupItem>Elit</ListGroupItem>\n          <ListGroupItem>Lorem</ListGroupItem>\n          <ListGroupItem>Ipsum</ListGroupItem>\n          <ListGroupItem>Dolor</ListGroupItem>\n          <ListGroupItem>Sit</ListGroupItem>\n          <ListGroupItem>Amet</ListGroupItem>\n          <ListGroupItem>Consectetur</ListGroupItem>\n          <ListGroupItem>Adipiscing</ListGroupItem>\n          <ListGroupItem>Elit</ListGroupItem>\n          <ListGroupItem>Lorem</ListGroupItem>\n          <ListGroupItem>Ipsum</ListGroupItem>\n          <ListGroupItem>Dolor</ListGroupItem>\n          <ListGroupItem>Sit</ListGroupItem>\n          <ListGroupItem>Amet</ListGroupItem>\n          <ListGroupItem>Consectetur</ListGroupItem>\n          <ListGroupItem>Adipiscing</ListGroupItem>\n          <ListGroupItem>Elit</ListGroupItem>\n        </ListGroup>\n      </SidebarContainer>\n      <SidebarTool>\n        <SidebarToggler onClick={() => setShow(!show)}>\n          {show ? (\n            <ChevronLeft size=\"24\" color={colors.navy} />\n          ) : (\n            <ChevronRight size=\"24\" color={colors.navy} />\n          )}\n        </SidebarToggler>\n      </SidebarTool>\n    </SidebarWrapper>\n  );\n};\n\ntype SidebarWrapperProps = {\n  show: boolean;\n};\n\nconst SidebarWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  margin-top: 61px;\n\n  width: ${(props: SidebarWrapperProps) => (props.show ? \"250px\" : \"40px\")};\n\n  background-color: ${colors.gray};\n`;\n\nconst SidebarContainer = styled.div`\n  flex-direction: column;\n\n  height: calc(100vh - 105px);\n\n  overflow: auto;\n\n  visibility: ${(props: SidebarWrapperProps) =>\n    props.show ? \"visible\" : \"hidden\"};\n`;\n\nconst SidebarTool = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: flex-end;\n\n  height: 40px;\n  width: inherit;\n\n  background-color: ${colors.navy};\n  border-top-right-radius: 9px;\n`;\n\nconst SidebarToggler = styled.button`\n  height: 40px;\n  width: 40px;\n\n  background-color: ${colors.white};\n  border: 1px solid ${colors.white};\n  border-top-right-radius: 3px;\n\n  outline: none;\n`;\n\nexport default Sidebar;\n","import styled from \"styled-components\";\n\nimport colors from \"../constants/colors\";\n\ntype SizeType = \"small\" | \"medium\" | \"large\";\n\nconst sizeMatcher = (size?: SizeType) => {\n  switch (size) {\n    case \"small\":\n      return `padding: 4px 8px;`;\n    case \"large\":\n      return `padding: 12px 28px;`;\n    case \"medium\":\n    default:\n      return `padding: 8px 16px;`;\n  }\n};\n\nconst variantMatcher = (variant: string) => {\n  switch (variant) {\n    case \"blue\":\n      return colors.blue;\n    case \"navy\":\n      return colors.navy;\n    case \"green\":\n      return colors.green;\n    case \"dark-green\":\n      return colors.darkGreen;\n    case \"red\":\n      return colors.red;\n    case \"orange\":\n      return colors.orange;\n    case \"yellow\":\n      return colors.yellow;\n    case \"gray\":\n      return colors.gray;\n    case \"black\":\n    default:\n      return colors.black;\n  }\n};\n\nconst colorMatcher = (variant: string, ghost: boolean = false) => {\n  if (ghost) {\n    switch (variant) {\n      case \"blue\":\n        return colors.blue;\n      case \"navy\":\n        return colors.navy;\n      case \"green\":\n        return colors.green;\n      case \"dark-green\":\n        return colors.darkGreen;\n      case \"red\":\n        return colors.red;\n      case \"orange\":\n        return colors.orange;\n      case \"yellow\":\n        return colors.yellow;\n      case \"gray\":\n        return colors.gray;\n      case \"black\":\n      default:\n        return colors.black;\n    }\n  } else {\n    switch (variant) {\n      case \"yellow\":\n      case \"gray\":\n        return colors.black;\n      case \"blue\":\n      case \"navy\":\n      case \"green\":\n      case \"dark-green\":\n      case \"red\":\n      case \"orange\":\n      case \"black\":\n      default:\n        return colors.white;\n    }\n  }\n};\n\nconst borderMatcher = (variant: string) => {\n  switch (variant) {\n    case \"blue\":\n      return `1.2px solid ${colors.blue}`;\n    case \"navy\":\n      return `1.2px solid ${colors.navy}`;\n    case \"green\":\n      return `1.2px solid ${colors.green}`;\n    case \"dark-green\":\n      return `1.2px solid ${colors.darkGreen}`;\n    case \"red\":\n      return `1.2px solid ${colors.red}`;\n    case \"orange\":\n      return `1.2px solid ${colors.orange}`;\n    case \"yellow\":\n      return `1.2px solid ${colors.yellow}`;\n    case \"gray\":\n      return `1.2px solid ${colors.gray}`;\n    case \"black\":\n    default:\n      return `1.2px solid ${colors.black}`;\n  }\n};\n\ntype ButtonProps = {\n  variant?: string;\n  ghost?: boolean;\n  rounded?: boolean;\n  size?: SizeType;\n  block?: boolean;\n};\n\nconst Button = styled.button`\n  margin: 4px;\n\n  background-color: ${(props: ButtonProps) =>\n    props.ghost\n      ? \"transparent\"\n      : props.variant && variantMatcher(props.variant)};\n  border-radius: ${props => (props.rounded ? `20px` : `3px`)};\n  border: ${props => props.variant && borderMatcher(props.variant)};\n\n  font-size: 12px;\n  color: ${props => props.variant && colorMatcher(props.variant, props.ghost)};\n\n  outline: none;\n  cursor: pointer;\n\n  ${props => props.size && sizeMatcher(props.size)};\n  ${props => (props.block ? `width: 100%;` : undefined)}\n\n  &:active {\n    background: ${props =>\n      props.disabled || props.ghost\n        ? undefined\n        : props.variant && variantMatcher(props.variant)};\n    opacity: 0.5;\n  }\n\n  &:disabled {\n    background: #6c8a9b;\n    border: 1.2px solid #6c8a9b;\n\n    color: #e6e6e4;\n  }\n`;\n\nButton.defaultProps = {\n  size: \"medium\"\n};\n\nexport default Button;\n","import * as React from \"react\";\nimport { useObject } from \"react-firebase-hooks/database\";\n\nimport RenderHandler from \"../components/RenderHandler\";\nimport View from \"../components/View\";\nimport Text from \"../components/Text\";\nimport Button from \"../components/Button\";\n\ntype ControlPanelProps = {\n  firebase: any;\n};\n\nconst ControlPanel = (props: ControlPanelProps) => {\n  const [pir1] = useObject(props.firebase.database().ref(\"PIR1\"));\n  const [pir2] = useObject(props.firebase.database().ref(\"PIR2\"));\n  const [pir3] = useObject(props.firebase.database().ref(\"PIR3\"));\n  const [pir4] = useObject(props.firebase.database().ref(\"PIR4\"));\n  const [relay1] = useObject(props.firebase.database().ref(\"R1\"));\n  const [relay2] = useObject(props.firebase.database().ref(\"R2\"));\n  const [relay3] = useObject(props.firebase.database().ref(\"R3\"));\n  const [relay4] = useObject(props.firebase.database().ref(\"R4\"));\n  const [relay5] = useObject(props.firebase.database().ref(\"R5\"));\n  const [relay6] = useObject(props.firebase.database().ref(\"R6\"));\n  const [relay7] = useObject(props.firebase.database().ref(\"R7\"));\n\n  const clickRelay = (ref: string, relayState: any) => {\n    let relayRef = props.firebase.database().ref(ref);\n\n    const currentRelay =\n      relayState && relayState.val() && relayState.val().status;\n    const status = currentRelay === \"OFF\" ? \"ON\" : \"OFF\";\n    relayRef.update({ status });\n  };\n\n  const mapPir = [\n    { pirState: pir1, dataRef: \"PIR1\", text: \"Lamp 1\" },\n    { pirState: pir2, dataRef: \"PIR2\", text: \"Lamp 2\" },\n    { pirState: pir3, dataRef: \"PIR3\", text: \"Lamp 3\" },\n    { pirState: pir4, dataRef: \"PIR4\", text: \"Lamp 4\" }\n  ];\n\n  const mapRelay = [\n    { relayState: relay1, dataRef: \"R1\", text: \"Control 1\" },\n    { relayState: relay2, dataRef: \"R2\", text: \"Control 2\" },\n    { relayState: relay3, dataRef: \"R3\", text: \"Control 3\" },\n    { relayState: relay4, dataRef: \"R4\", text: \"Control 4\" },\n    { relayState: relay5, dataRef: \"R5\", text: \"Control 5\" },\n    { relayState: relay6, dataRef: \"R6\", text: \"Control 6\" },\n    { relayState: relay7, dataRef: \"R7\", text: \"Control 7\" }\n  ];\n\n  return (\n    <RenderHandler>\n      {isDesktopOrLaptop => (\n        <View\n          flexDirection={!isDesktopOrLaptop ? \"column\" : \"row\"}\n          flexAlignItems={!isDesktopOrLaptop && \"center\"}\n        >\n          <View\n            flex={0.55}\n            flexDirection=\"column\"\n            flexAlignItems={!isDesktopOrLaptop && \"center\"}\n          >\n            <Text as=\"h3\">Indicator</Text>\n\n            <View\n              flexWrap=\"wrap\"\n              flexJustifyContent={!isDesktopOrLaptop && \"center\"}\n              style={{ margin: \"auto -4px\" }}\n            >\n              {mapPir.map(pirItem => {\n                return (\n                  <Button\n                    variant={\n                      pirItem.pirState &&\n                      pirItem.pirState.val() &&\n                      pirItem.pirState.val().status === \"1\"\n                        ? \"green\"\n                        : \"red\"\n                    }\n                    rounded\n                    key={pirItem.dataRef}\n                  >\n                    {pirItem.text}\n                  </Button>\n                );\n              })}\n            </View>\n          </View>\n\n          <View\n            flex={1}\n            flexDirection=\"column\"\n            flexAlignItems={!isDesktopOrLaptop && \"center\"}\n          >\n            <Text as=\"h3\">Control</Text>\n\n            <View\n              flexWrap=\"wrap\"\n              flexJustifyContent={!isDesktopOrLaptop && \"center\"}\n              style={{ margin: \"auto -4px\" }}\n            >\n              {mapRelay.map(relayItem => {\n                return (\n                  <Button\n                    variant={\n                      relayItem.relayState &&\n                      relayItem.relayState.val() &&\n                      relayItem.relayState.val().status === \"ON\"\n                        ? \"green\"\n                        : \"red\"\n                    }\n                    size=\"medium\"\n                    onClick={() =>\n                      clickRelay(relayItem.dataRef, relayItem.relayState)\n                    }\n                    key={relayItem.dataRef}\n                  >\n                    {relayItem.text}\n                  </Button>\n                );\n              })}\n            </View>\n          </View>\n        </View>\n      )}\n    </RenderHandler>\n  );\n};\n\nexport default ControlPanel;\n","import dayjs from \"dayjs\";\n\nconst graphInitialData = {\n  labels: [],\n  datasets: [\n    {\n      label: \"Data\",\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: \"rgba(75,192,192,0.4)\",\n      borderColor: \"rgba(75,192,192,1)\",\n      borderCapStyle: \"butt\",\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: \"miter\",\n      pointBorderColor: \"rgba(75,192,192,1)\",\n      pointBackgroundColor: \"#fff\",\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n      pointHoverBorderColor: \"rgba(220,220,220,1)\",\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: []\n    }\n  ]\n};\n\nconst graphOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    enabled: false\n  },\n  scales: {\n    xAxes: [\n      {\n        ticks: {\n          fontSize: 12,\n          maxRotation: 0,\n          minRotation: 0\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          fontSize: 12\n        }\n      }\n    ]\n  }\n};\n\nconst getGraphData = (data: any, oldObj: any) => {\n  let { labels, datasets } = oldObj;\n  let chartDatasets = datasets[0];\n  let { data: chartLoggerData } = chartDatasets;\n\n  let currentTime = dayjs(new Date().getTime()).format(\"HH:mm:ss\");\n\n  const newLabels = [...labels, currentTime];\n  const newData = [...chartLoggerData, data];\n\n  return {\n    labels: newLabels.length > 5 ? newLabels.slice(1, 6) : newLabels,\n    datasets: [\n      {\n        ...chartDatasets,\n        data: newData.length > 5 ? newData.slice(1, 6) : newData\n      }\n    ]\n  };\n};\n\nexport { graphInitialData, graphOptions, getGraphData };\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Line } from \"react-chartjs-2\";\n\nimport Text from \"./Text\";\nimport {\n  graphInitialData,\n  graphOptions,\n  getGraphData\n} from \"../utils/chartUtils\";\n\ntype LineGraphProps = {\n  streamData: string | number;\n  title: string;\n  height?: number;\n  width?: number;\n  options: any;\n};\n\nconst LineGraph = (props: LineGraphProps) => {\n  const [graphData, setGraphData] = React.useState(graphInitialData);\n\n  React.useEffect(() => {\n    setGraphData((oldData: any): any =>\n      getGraphData(props.streamData, oldData)\n    );\n  }, [props.streamData]);\n\n  return (\n    <GraphContainer>\n      <Text as=\"h4\">{props.title}</Text>\n      <Line\n        height={props.height}\n        width={props.width}\n        // @ts-ignore\n        data={graphData}\n        options={{ ...graphOptions, ...props.options }}\n      />\n    </GraphContainer>\n  );\n};\n\nconst GraphContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 0 8px;\n`;\n\nexport default LineGraph;\n","import styled from \"styled-components\";\n\nimport colors from \"../constants/colors\";\n\nconst Card = styled.div`\n  display: flex;\n\n  margin: 8px 0;\n  padding: 16px 8px;\n\n  width: 100%;\n  width: -moz-available;\n  width: -webkit-fill-available;\n  width: fill-available;\n\n  background-color: ${colors.white};\n  border-radius: 4px;\n  box-shadow: 0px 0px 10px 2px rgba(41, 63, 76, 0.05);\n  -webkit-box-shadow: 0px 0px 10px 2px rgba(41, 63, 76, 0.05);\n  -moz-box-shadow: 0px 0px 10px 2px rgba(41, 63, 76, 0.05);\n`;\n\nexport default Card;\n","import * as React from \"react\";\nimport { useObject } from \"react-firebase-hooks/database\";\n\nimport RenderHandler from \"../components/RenderHandler\";\nimport View from \"../components/View\";\nimport LineGraph from \"../components/LineGraph\";\nimport Card from \"../components/Card\";\nimport Text from \"../components/Text\";\n\ntype GraphsProps = {\n  firebase: any;\n};\n\nconst Graphs = (props: GraphsProps) => {\n  const [voltage] = useObject(props.firebase.database().ref(\"aVolt\"));\n  const [amphere] = useObject(props.firebase.database().ref(\"aAmp\"));\n  const [power, setPower] = React.useState();\n  React.useEffect(() => {\n    const currentVoltageData = voltage && voltage.val();\n    const currentAmphereData = amphere && amphere.val();\n\n    setPower(currentVoltageData * currentAmphereData);\n  }, [voltage, amphere]);\n\n  return (\n    <RenderHandler>\n      {isDesktopOrLaptop => (\n        <View\n          flexDirection=\"column\"\n          flexAlignItems={!isDesktopOrLaptop && \"center\"}\n        >\n          <Text as=\"h3\">Realtime Graph</Text>\n          <Card>\n            <View\n              flex={1}\n              flexDirection={!isDesktopOrLaptop ? \"column\" : \"row\"}\n              flexAlignItems=\"center\"\n            >\n              <LineGraph\n                streamData={voltage && voltage.val()}\n                title=\"Voltage\"\n                height={250}\n                options={{\n                  scales: {\n                    yAxes: [\n                      {\n                        ticks: {\n                          beginAtZero: true,\n                          min: 0,\n                          max: 230,\n                          stepSize: 10\n                        }\n                      }\n                    ]\n                  }\n                }}\n              />\n              <LineGraph\n                streamData={amphere && amphere.val()}\n                title=\"Amphere\"\n                height={250}\n                options={{\n                  scales: {\n                    yAxes: [\n                      {\n                        ticks: {\n                          beginAtZero: true,\n                          min: 0,\n                          max: 1.5,\n                          stepSize: 0.15\n                        }\n                      }\n                    ]\n                  }\n                }}\n              />\n              <LineGraph\n                streamData={power}\n                title=\"Power\"\n                height={250}\n                options={{\n                  scales: {\n                    yAxes: [\n                      {\n                        ticks: {\n                          beginAtZero: true,\n                          min: 0,\n                          max: 345,\n                          stepSize: 15\n                        }\n                      }\n                    ]\n                  }\n                }}\n              />\n            </View>\n          </Card>\n        </View>\n      )}\n    </RenderHandler>\n  );\n};\n\nexport default Graphs;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase\";\n\nimport Navbar from \"./layouts/Navbar\";\nimport Sidebar from \"./layouts/Sidebar\";\nimport ControlPanel from \"./layouts/ControlPanel\";\nimport Graphs from \"./layouts/Graphs\";\nimport RenderHandler from \"./components/RenderHandler\";\nimport Spacer from \"./components/Spacer\";\nimport colors from \"./constants/colors\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FB_API_KEY,\n  databaseURL: process.env.REACT_APP_FB_DATABASE_URL,\n  projectId: process.env.REACT_APP_FB_PROJECT_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst App = () => {\n  return (\n    <RenderHandler>\n      {isDesktopOrLaptop => (\n        <Container>\n          <Navbar firebase={firebase} />\n          <MainWrapper>\n            {isDesktopOrLaptop && <Sidebar />}\n            <MainContent isDesktopOrLaptop={isDesktopOrLaptop}>\n              <MainContentWrapper isDesktopOrLaptop={isDesktopOrLaptop}>\n                <ControlPanel firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n                <Spacer />\n                <Graphs firebase={firebase} />\n              </MainContentWrapper>\n            </MainContent>\n          </MainWrapper>\n        </Container>\n      )}\n    </RenderHandler>\n  );\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  min-height: 100%;\n  max-width: 100vw;\n`;\n\nconst MainWrapper = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: row;\n\n  background-color: ${colors.gray};\n  border: 4px solid ${colors.navy};\n`;\n\ntype MainContentProps = {\n  isDesktopOrLaptop: boolean;\n};\n\nconst MainContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n\n  margin-top: ${(props: MainContentProps) =>\n    props.isDesktopOrLaptop ? `56px` : `81px`};\n`;\n\nconst MainContentWrapper = styled.div`\n  flex-direction: column;\n\n  padding: 16px;\n\n  height: ${(props: MainContentProps) =>\n    props.isDesktopOrLaptop ? `calc(100vh - 96px);` : `calc(100vh - 120px);`};\n\n  overflow: auto;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}